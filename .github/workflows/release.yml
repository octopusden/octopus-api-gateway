name: BUILD AND RELEASE

on:
  workflow_dispatch:
    types: [ release ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod
    permissions:
      packages: write
      contents: write
    steps:
      - - name: Input parameters
          run: |
            echo "Commit: ${{ github.event.client_payload.commit }}"
            echo "Project version: ${{ github.event.client_payload.project_version }}"
      - uses: actions/checkout@v3
        name: Checkout(switching to commit)
        with:
          ref: ${{ github.event.client_payload.commit }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        run: ./gradlew build dockerBuildImage -x test -Ppublishing.docker.registry=ghcr.io/${{ github.repository_owner }} -Pdocker.registry=docker.i -PbuildVersion=${{ github.event.client_payload.project_version }} -Pversion=${{ github.event.client_payload.project_version }} --info
      - name: Publish
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -PbuildVersion=${{ github.event.client_payload.project_version }} -Pversion=${{ github.event.client_payload.project_version }}  -s
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to docker registry
        run: docker push ghcr.io/octopusden/api-gateway:${{ env.BUILD_VERSION }}
      - name: Create Release
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: v${{ github.event.client_payload.project_version }}
